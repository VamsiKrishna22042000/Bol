{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Ionink Company\\\\InfoPillar Solution Task - 02\\\\src\\\\components\\\\Table.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n\n// const Table = () => {\n//   return (\n//     <div style={{ height: \"727px\", width: \"100%\", border: \"2px solid black\" }}>\n//       <div className=\"container mb-5\">\n//         <table\n//           class=\"table caption-top\"\n//           style={{\n//             border: \"1px solid black\",\n//             fontSize: \"38px\",\n//           }}\n//         >\n//           <tbody>\n//             <tr style={{ padding: \"22.8px 15px\" }}>\n//               <th style={{ padding: \"22.8px 15px\" }} scope=\"row\">\n//                 Current\n//               </th>\n//               <td style={{ padding: \"22.8px 15px\" }}>Metafy</td>\n//               <td style={{ padding: \"22.8px 15px\" }}>Design Lead</td>\n//               <td style={{ padding: \"22.8px 15px\" }}>Remote</td>\n//               <th\n//                 style={{ padding: \"22.8px 15px\" }}\n//                 data-bs-toggle=\"collapse\"\n//                 data-bs-target=\"#row1\"\n//                 class=\"clickable\"\n//               >\n//                 +\n//               </th>\n//             </tr>\n//             <tr\n//               id=\"row1\"\n//               className=\"container\"\n//               style={{ padding: \"22.8px 15px\" }}\n//             >\n//               <td colspan=\"4\">Collapsible content for Row 1</td>\n//             </tr>\n//           </tbody>\n\n//           <tbody>\n//             <tr style={{ padding: \"22.8px 15px\" }}>\n//               <th style={{ padding: \"22.8px 15px\" }} scope=\"row\">\n//                 Current\n//               </th>\n//               <td style={{ padding: \"22.8px 15px\" }}>Metafy</td>\n//               <td style={{ padding: \"22.8px 15px\" }}>Design Lead</td>\n//               <td style={{ padding: \"22.8px 15px\" }}>Remote</td>\n//               <th\n//                 style={{ padding: \"22.8px 15px\" }}\n//                 data-bs-toggle=\"collapse\"\n//                 data-bs-target=\"#row2\"\n//                 class=\"clickable\"\n//               >\n//                 +\n//               </th>\n//             </tr>\n//             <tr\n//               id=\"row2\"\n//               className=\"container\"\n//               style={{ padding: \"22.8px 15px\" }}\n//             >\n//               <td colspan=\"4\">Collapsible content for Row 1</td>\n//             </tr>\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Table;\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = () => {\n  _s();\n  const [expandedRows, setExpandedRows] = useState([]);\n  const toggleRow = rowId => {\n    if (expandedRows.includes(rowId)) {\n      setExpandedRows(expandedRows.filter(id => id !== rowId));\n    } else {\n      setExpandedRows([...expandedRows, rowId]);\n    }\n  };\n  const isRowExpanded = rowId => expandedRows.includes(rowId);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Header 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Header 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(TableRow, {\n        rowData: {\n          id: \"row1\",\n          data1: \"Row 1 Data 1\",\n          data2: \"Row 1 Data 2\"\n        },\n        isExpanded: isRowExpanded(\"row1\"),\n        toggleRow: toggleRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n        rowData: {\n          id: \"row2\",\n          data1: \"Row 2 Data 1\",\n          data2: \"Row 2 Data 2\"\n        },\n        isExpanded: isRowExpanded(\"row2\"),\n        toggleRow: toggleRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"l4bKwnEY7LQN6NdDiBdd9fKGrcg=\");\n_c = Table;\nconst TableRow = ({\n  rowData,\n  isExpanded,\n  toggleRow\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: `clickable ${isExpanded ? \"\" : \"\"}`,\n      onClick: () => toggleRow(rowData.id),\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: rowData.data1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: rowData.data2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"tr\", {\n      id: rowData.id,\n      className: \"collapse\",\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        colSpan: \"2\",\n        children: [\"Collapsible content for \", rowData.data1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c2 = TableRow;\nexport default Table;\nvar _c, _c2;\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"TableRow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","_s","expandedRows","setExpandedRows","toggleRow","rowId","includes","filter","id","isRowExpanded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TableRow","rowData","data1","data2","isExpanded","_c","onClick","colSpan","_c2","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/Ionink Company/InfoPillar Solution Task - 02/src/components/Table.jsx"],"sourcesContent":["// import React from \"react\";\r\n\r\n// const Table = () => {\r\n//   return (\r\n//     <div style={{ height: \"727px\", width: \"100%\", border: \"2px solid black\" }}>\r\n//       <div className=\"container mb-5\">\r\n//         <table\r\n//           class=\"table caption-top\"\r\n//           style={{\r\n//             border: \"1px solid black\",\r\n//             fontSize: \"38px\",\r\n//           }}\r\n//         >\r\n//           <tbody>\r\n//             <tr style={{ padding: \"22.8px 15px\" }}>\r\n//               <th style={{ padding: \"22.8px 15px\" }} scope=\"row\">\r\n//                 Current\r\n//               </th>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Metafy</td>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Design Lead</td>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Remote</td>\r\n//               <th\r\n//                 style={{ padding: \"22.8px 15px\" }}\r\n//                 data-bs-toggle=\"collapse\"\r\n//                 data-bs-target=\"#row1\"\r\n//                 class=\"clickable\"\r\n//               >\r\n//                 +\r\n//               </th>\r\n//             </tr>\r\n//             <tr\r\n//               id=\"row1\"\r\n//               className=\"container\"\r\n//               style={{ padding: \"22.8px 15px\" }}\r\n//             >\r\n//               <td colspan=\"4\">Collapsible content for Row 1</td>\r\n//             </tr>\r\n//           </tbody>\r\n\r\n//           <tbody>\r\n//             <tr style={{ padding: \"22.8px 15px\" }}>\r\n//               <th style={{ padding: \"22.8px 15px\" }} scope=\"row\">\r\n//                 Current\r\n//               </th>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Metafy</td>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Design Lead</td>\r\n//               <td style={{ padding: \"22.8px 15px\" }}>Remote</td>\r\n//               <th\r\n//                 style={{ padding: \"22.8px 15px\" }}\r\n//                 data-bs-toggle=\"collapse\"\r\n//                 data-bs-target=\"#row2\"\r\n//                 class=\"clickable\"\r\n//               >\r\n//                 +\r\n//               </th>\r\n//             </tr>\r\n//             <tr\r\n//               id=\"row2\"\r\n//               className=\"container\"\r\n//               style={{ padding: \"22.8px 15px\" }}\r\n//             >\r\n//               <td colspan=\"4\">Collapsible content for Row 1</td>\r\n//             </tr>\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Table;\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst Table = () => {\r\n  const [expandedRows, setExpandedRows] = useState([]);\r\n\r\n  const toggleRow = (rowId) => {\r\n    if (expandedRows.includes(rowId)) {\r\n      setExpandedRows(expandedRows.filter((id) => id !== rowId));\r\n    } else {\r\n      setExpandedRows([...expandedRows, rowId]);\r\n    }\r\n  };\r\n\r\n  const isRowExpanded = (rowId) => expandedRows.includes(rowId);\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Header 1</th>\r\n          <th>Header 2</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <TableRow\r\n          rowData={{ id: \"row1\", data1: \"Row 1 Data 1\", data2: \"Row 1 Data 2\" }}\r\n          isExpanded={isRowExpanded(\"row1\")}\r\n          toggleRow={toggleRow}\r\n        />\r\n        <TableRow\r\n          rowData={{ id: \"row2\", data1: \"Row 2 Data 1\", data2: \"Row 2 Data 2\" }}\r\n          isExpanded={isRowExpanded(\"row2\")}\r\n          toggleRow={toggleRow}\r\n        />\r\n        {/* Add more rows as needed */}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst TableRow = ({ rowData, isExpanded, toggleRow }) => {\r\n  return (\r\n    <>\r\n      <tr\r\n        className={`clickable ${isExpanded ? \"\" : \"\"}`}\r\n        onClick={() => toggleRow(rowData.id)}\r\n      >\r\n        <td>{rowData.data1}</td>\r\n        <td>{rowData.data2}</td>\r\n      </tr>\r\n      {isExpanded && (\r\n        <tr id={rowData.id} className=\"collapse\">\r\n          <td colSpan=\"2\">Collapsible content for {rowData.data1}</td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}